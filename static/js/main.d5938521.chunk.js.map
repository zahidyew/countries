{"version":3,"sources":["components/Header.js","components/CountryItem.js","components/CountryRow.js","components/Search.js","components/Select.js","components/CountryMap.js","components/pages/CountryPage.js","App.js","index.js"],"names":["Header","CountryItem","num","style","row","country","pageUrl","alpha2Code","to","color","name","region","population","numeral","format","width","src","flag","alt","height","CountryRow","countries","i","Table","responsive","striped","bordered","hover","variant","map","key","Search","getQuery","useState","text","setText","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","input","typing","target","Select","getChoice","choice","setChoice","disabled","CountryMap","latlng","Map","center","zoom","TileLayer","url","attribution","flexCenter","pTop","pBot","display","alignItem","justifyContent","paddingTop","paddingBottom","imgStyle","CountryPage","countryCode","match","params","code","setCountry","useEffect","a","axios","result","data","fetchCountry","capital","subregion","callingCodes","currency","undefined","currencies","length","symbol","getCurrency","language","languages","getLanguage","App","setCountries","query","setQuery","sort","sortDesc","sortAsc","fetchCountries","property","b","exact","path","render","props","q","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5938521.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n   return (\r\n      <h1>Countries of the World</h1>\r\n   )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport numeral from 'numeral';\r\n\r\nconst CountryItem = ({row, country}) => {\r\n   /* const pageUrl = {\r\n      pathname: \"/countrypage/\" + country.alpha2Code\r\n   }; */\r\n\r\n   const pageUrl = \"/countrypage/\" + country.alpha2Code\r\n\r\n   const imgStyle = {  \r\n      height: '50px',\r\n      width: '85px'\r\n   }; \r\n   \r\n   const flagColStyle = {\r\n      width: '110px'\r\n   }\r\n\r\n   const linkStyle = {\r\n      color: '#cccc00'\r\n   }\r\n\r\n   const formatNumber = (num, style) => {\r\n      return num = numeral(num).format(style);\r\n   }\r\n\r\n   return (\r\n      <tr>\r\n         <td> {row} </td>\r\n         <td> <Link to={pageUrl} style={linkStyle}> {country.name} </Link>  </td>\r\n         <td> {country.region} </td>\r\n         <td> {formatNumber(country.population, '0,0')} </td>\r\n         <td style={flagColStyle}> <img src={country.flag} alt={country.name} style={imgStyle} /> </td>\r\n      </tr>    \r\n   )\r\n}\r\n\r\nexport default CountryItem\r\n","import React from 'react'\r\nimport CountryItem from './CountryItem'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst CountryRow = ({countries}) => {\r\n   let i = 1;\r\n\r\n   return (\r\n      <Table responsive striped bordered hover variant=\"dark\">\r\n         <thead>\r\n            <tr>\r\n               <th>No.</th>\r\n               <th>Country</th>\r\n               <th>Continent</th>\r\n               <th>Population</th>\r\n               <th>Flag</th>\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {countries.map(country => (\r\n               <CountryItem key={country.alpha2Code} row={i++} country={country} />             \r\n            ))} \r\n         </tbody>         \r\n      </Table>\r\n   )\r\n}\r\n\r\nexport default CountryRow\r\n","import React, {useState} from 'react'\r\n\r\nconst Search = ({getQuery}) => {\r\n   const [text, setText] = useState('');\r\n\r\n   // when user type something in the searchbar, get that input and pass it above to App.js (prop.getQuery)\r\n   const typing = (input) => {\r\n      setText(input);\r\n      getQuery(input);\r\n   }\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n   }\r\n\r\n   return (\r\n      <div className=\"search\">\r\n         <form onSubmit={onSubmit}>\r\n            <input\r\n               type=\"text\"\r\n               className=\"form-control\"\r\n               placeholder=\"Search country\"\r\n               value={text}\r\n               onChange={(input) => typing(input.target.value)}\r\n            />\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\n\r\nconst Select = ({getChoice}) => {\r\n   const [choice, setChoice] = useState('');\r\n\r\n   const handleChange = (input) => {\r\n      //console.log(input.target.value)\r\n      setChoice(input.target.value);\r\n      getChoice(input.target.value);\r\n   }\r\n\r\n   return (\r\n      <div className=\"select-div\">\r\n         <select value={choice} onChange={handleChange}>\r\n            <option disabled value=\"\"> Sort by </option>\r\n            <option value=\"alphabetically\"> Alphabetically </option>\r\n            <option value=\"largest\"> Largest population </option>\r\n            <option value=\"smallest\"> Smallest population </option>\r\n         </select>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\n\r\nconst CountryMap = ({latlng}) => {\r\n   //console.log(latlng)\r\n   return (\r\n      <Map center={latlng} zoom={5}>\r\n         <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n         />\r\n      </Map>\r\n   )\r\n}\r\n\r\nexport default CountryMap\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport numeral from 'numeral';\r\nimport Table from 'react-bootstrap/Table';\r\nimport CountryMap from '../CountryMap'\r\n\r\nconst CountryPage = ({match}) => {\r\n   const countryCode = match.params.code;\r\n   const [country, setCountry] = useState([]);\r\n   \r\n   useEffect(() => {\r\n      const fetchCountry = async () => {\r\n         const result = await axios(`https://restcountries.eu/rest/v2/alpha/${countryCode}`)\r\n\r\n         //console.log(result.data);\r\n         setCountry(result.data);\r\n      }\r\n      fetchCountry();\r\n   }, [countryCode]);\r\n\r\n   const formatNumber = (num, style) => {\r\n      return num = numeral(num).format(style);\r\n   }\r\n\r\n   const getLanguage = () => {\r\n      let language = '';\r\n      if (country.languages !== undefined) {\r\n         for (let i = 0; i < country.languages.length; i++) {\r\n            language === '' ? language = country.languages[i].name\r\n               : language = language + ', ' + country.languages[i].name\r\n         }\r\n         //console.log(language)\r\n      }\r\n      return language;\r\n   }\r\n\r\n   const getCurrency = () => {\r\n      let currency = '';\r\n      if (country.currencies !== undefined) {\r\n         for (let i = 0; i < country.currencies.length; i++) {\r\n            currency === '' ? currency = `${country.currencies[i].name} (${country.currencies[i].symbol})`\r\n               : currency = currency + `, ${country.currencies[i].name} (${country.currencies[i].symbol})`\r\n         }\r\n      }\r\n      return currency;\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div className=\"flag-div\" style={flexCenter('1rem', '1rem')}>\r\n            <img src={country.flag} style={imgStyle} alt='flag'></img>\r\n         </div>\r\n         <h2 style={flexCenter(0,'1rem')}> {country.name} </h2>\r\n         <Table responsive striped bordered hover variant=\"dark\">\r\n            <tbody>\r\n               <tr>\r\n                  <td> Capital </td>\r\n                  <td> {country.capital} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Region </td>\r\n                  <td> {country.region} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Subregion </td>\r\n                  <td> {country.subregion} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Calling Codes </td>\r\n                  <td> {country.callingCodes} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Population </td>\r\n                  <td> {formatNumber(country.population, '0,0')} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Currency </td>\r\n                  <td> {getCurrency()} </td>\r\n               </tr>\r\n               <tr>\r\n                  <td> Language </td>\r\n                  <td> {getLanguage()} </td>\r\n               </tr>\r\n            </tbody>\r\n         </Table>\r\n         <CountryMap latlng={country.latlng} />\r\n         \r\n         {/* <div>\r\n            <p> <label style={labelStyle}> Capital </label> : {country.capital} </p>\r\n            <p> <label style={labelStyle}> Region </label> : {country.region} </p>\r\n            <p> <label style={labelStyle}> Subregion </label> : {country.subregion} </p>\r\n            <p> <label style={labelStyle}> Calling Codes </label> : {country.callingCodes} </p>\r\n            <p> <label style={labelStyle}> Population </label> : {formatNumber(country.population, '0,0')} </p>\r\n            <p> <label style={labelStyle}> Currency </label> : {getCurrency()} </p>\r\n            <p> <label style={labelStyle}> Language </label> : {getLanguage()} </p>\r\n            {/* <p> Timezone: {country.timezones} </p> \r\n         </div> */}\r\n      </>\r\n   )\r\n}\r\n\r\nconst flexCenter = (pTop, pBot) => {\r\n   return {\r\n      display: 'flex',\r\n      alignItem: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: pTop,\r\n      paddingBottom: pBot\r\n   }     \r\n}\r\n\r\nconst imgStyle = {\r\n   width: '250px',\r\n   height: '150px'\r\n}\r\n\r\n/* const labelStyle = {\r\n   width: '110px'\r\n} */\r\n\r\nexport default CountryPage\r\n","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport axios from 'axios';\nimport Header from './components/Header';\nimport CountryRow from './components/CountryRow';\nimport Search from './components/Search';\nimport Select from './components/Select';\nimport CountryPage from './components/pages/CountryPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const[countries, setCountries] = useState([]);\n  const[query, setQuery] = useState('');\n  const[choice, setChoice] = useState('');\n\n  useEffect(() => {\n    const fetchCountries = async() => {\n      let result = '';\n\n      // if user type something in the searchbar, search for that country, else fetch everything\n      query !== '' ? result = await axios(`https://restcountries.eu/rest/v2/name/${query}`) \n      : result = await axios('https://restcountries.eu/rest/v2/all');\n      //console.log(result.data)\n\n      // sort the country based on user's preference. Default is alphabetically\n      choice === 'largest' ? setCountries(result.data.sort(sortDesc(\"population\")))\n      : choice === 'smallest' ? setCountries(result.data.sort(sortAsc(\"population\")))\n      : setCountries(result.data);\n    }\n    fetchCountries();\n  }, [query, choice]);\n\n  const sortDesc = (property) => {\n    return function (a, b) {\n      if (a[property] > b[property]) // return negative num, then a,b \n        return -1;\n      else if (a[property] < b[property]) // return positive num, then b,a\n        return 1;\n\n      return 0;\n    }  \n  }\n\n  const sortAsc = (property) => {\n    return function (a, b) {\n      if (a[property] > b[property])\n        return 1;\n      else if (a[property] < b[property])\n        return -1;\n\n      return 0;\n    }\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <Route exact path=\"/countries\" render={props => (\n          <>\n            <div className='select-search-div'>\n              <Select getChoice={(value) => setChoice(value)} />\n              <Search getQuery={(q) => setQuery(q)} /> {/* /* get query from searchbar */}\n            </div>\n            <CountryRow countries={countries} />\n          </>\n        )} />\n        <Route path=\"/countrypage/:code\" component={CountryPage} />\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}